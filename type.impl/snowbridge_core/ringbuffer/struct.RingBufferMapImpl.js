(function() {var type_impls = {
"snowbridge_pallet_ethereum_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RingBufferMap%3CKey,+Value,+QueryKind%3E-for-RingBufferMapImpl%3CIndex,+B,+CurrentIndex,+Intermediate,+M,+QueryKind%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/snowbridge_core/ringbuffer.rs.html#31-42\">source</a><a href=\"#impl-RingBufferMap%3CKey,+Value,+QueryKind%3E-for-RingBufferMapImpl%3CIndex,+B,+CurrentIndex,+Intermediate,+M,+QueryKind%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;Key, Value, Index, B, CurrentIndex, Intermediate, M, QueryKind&gt; <a class=\"trait\" href=\"snowbridge_core/ringbuffer/trait.RingBufferMap.html\" title=\"trait snowbridge_core::ringbuffer::RingBufferMap\">RingBufferMap</a>&lt;Key, Value, QueryKind&gt; for <a class=\"struct\" href=\"snowbridge_core/ringbuffer/struct.RingBufferMapImpl.html\" title=\"struct snowbridge_core::ringbuffer::RingBufferMapImpl\">RingBufferMapImpl</a>&lt;Index, B, CurrentIndex, Intermediate, M, QueryKind&gt;<div class=\"where\">where\n    Key: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.FullCodec.html\" title=\"trait parity_scale_codec::codec::FullCodec\">FullCodec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Value: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.FullCodec.html\" title=\"trait parity_scale_codec::codec::FullCodec\">FullCodec</a>,\n    Index: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a>&lt;Output = Index&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"parity_scale_codec/codec/trait.FullCodec.html\" title=\"trait parity_scale_codec::codec::FullCodec\">FullCodec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    B: <a class=\"trait\" href=\"bounded_collections/trait.Get.html\" title=\"trait bounded_collections::Get\">Get</a>&lt;Index&gt;,\n    CurrentIndex: <a class=\"trait\" href=\"frame_support/storage/trait.StorageValue.html\" title=\"trait frame_support::storage::StorageValue\">StorageValue</a>&lt;Index, Query = Index&gt;,\n    Intermediate: <a class=\"trait\" href=\"frame_support/storage/trait.StorageMap.html\" title=\"trait frame_support::storage::StorageMap\">StorageMap</a>&lt;Index, Key, Query = Key&gt;,\n    M: <a class=\"trait\" href=\"frame_support/storage/trait.StorageMap.html\" title=\"trait frame_support::storage::StorageMap\">StorageMap</a>&lt;Key, Value, Query = &lt;QueryKind as <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, <a class=\"struct\" href=\"bounded_collections/struct.GetDefault.html\" title=\"struct bounded_collections::GetDefault\">GetDefault</a>&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.QueryKindTrait.html#associatedtype.Query\" title=\"type frame_support::storage::types::QueryKindTrait::Query\">Query</a>&gt;,\n    QueryKind: <a class=\"trait\" href=\"frame_support/storage/types/trait.QueryKindTrait.html\" title=\"trait frame_support::storage::types::QueryKindTrait\">QueryKindTrait</a>&lt;Value, <a class=\"struct\" href=\"bounded_collections/struct.GetDefault.html\" title=\"struct bounded_collections::GetDefault\">GetDefault</a>&gt;,</div></h3></section></summary><div class=\"docblock\"><p>Ringbuffer implementation based on <code>RingBufferTransient</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/snowbridge_core/ringbuffer.rs.html#45\">source</a><a href=\"#method.insert\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"snowbridge_core/ringbuffer/trait.RingBufferMap.html#tymethod.insert\" class=\"fn\">insert</a>(k: Key, v: Value)</h4></section></summary><div class=\"docblock\"><p>Insert a map entry.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/snowbridge_core/ringbuffer.rs.html#68\">source</a><a href=\"#method.contains_key\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"snowbridge_core/ringbuffer/trait.RingBufferMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>(k: Key) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check if map contains a key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/snowbridge_core/ringbuffer.rs.html#73\">source</a><a href=\"#method.get\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"snowbridge_core/ringbuffer/trait.RingBufferMap.html#tymethod.get\" class=\"fn\">get</a>(k: Key) -&gt; &lt;M as <a class=\"trait\" href=\"frame_support/storage/trait.StorageMap.html\" title=\"trait frame_support::storage::StorageMap\">StorageMap</a>&lt;Key, Value&gt;&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/trait.StorageMap.html#associatedtype.Query\" title=\"type frame_support::storage::StorageMap::Query\">Query</a></h4></section></summary><div class=\"docblock\"><p>Get the value associated with key</p>\n</div></details></div></details>","RingBufferMap<Key, Value, QueryKind>","snowbridge_pallet_ethereum_client::types::FinalizedBeaconStateBuffer"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()