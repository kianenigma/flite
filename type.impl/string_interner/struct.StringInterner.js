(function() {var type_impls = {
"string_interner":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#62-75\">source</a><a href=\"#impl-Clone-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#68-74\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#175\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#40-52\">source</a><a href=\"#impl-Debug-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#46-51\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-StringInterner%3CStringBackend%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#55-60\">source</a><a href=\"#impl-Default-for-StringInterner%3CStringBackend%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;<a class=\"type\" href=\"string_interner/type.DefaultBackend.html\" title=\"type string_interner::DefaultBackend\">DefaultBackend</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#57-59\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#310-325\">source</a><a href=\"#impl-Extend%3CT%3E-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#317-324\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iter: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#454\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#462\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#291-308\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#298-307\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#77-86\">source</a><a href=\"#impl-PartialEq-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#83-85\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#123-289\">source</a><a href=\"#impl-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#131-137\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: H) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new empty <code>StringInterner</code> with the given hasher.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#141-147\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, hash_builder: H) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new empty <code>StringInterner</code> with the given initial capacity and the given hasher.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#151-153\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of strings interned by the interner.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#157-159\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the string interner has no interned strings.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#165-184\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.get\" class=\"fn\">get</a>&lt;T&gt;(&amp;self, string: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the symbol for the given string if any.</p>\n<p>Can be used to query if a string has already been interned without interning.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_intern\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#237-242\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.get_or_intern\" class=\"fn\">get_or_intern</a>&lt;T&gt;(&amp;mut self, string: T) -&gt; &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Interns the given string.</p>\n<p>Returns a symbol for resolution into the original string.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If the interner already interns the maximum number of strings possible\nby the chosen symbol type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_intern_static\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#258-260\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.get_or_intern_static\" class=\"fn\">get_or_intern_static</a>(\n    &amp;mut self,\n    string: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a></h4></section></summary><div class=\"docblock\"><p>Interns the given <code>'static</code> string.</p>\n<p>Returns a symbol for resolution into the original string.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This is more efficient than <a href=\"string_interner/struct.StringInterner.html#method.get_or_intern\" title=\"method string_interner::StringInterner::get_or_intern\"><code>StringInterner::get_or_intern</code></a> since it might\navoid some memory allocations if the backends supports this.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>If the interner already interns the maximum number of strings possible\nby the chosen symbol type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#263-265\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink backend capacity to fit the interned strings exactly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#269-271\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.resolve\" class=\"fn\">resolve</a>(&amp;self, symbol: &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the string for the given `symbol`` if any.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#280-282\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"string_interner/struct.StringInterner.html#tymethod.resolve_unchecked\" class=\"fn\">resolve_unchecked</a>(&amp;self, symbol: &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Returns the string for the given <code>symbol</code> without performing any checks.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>It is the caller’s responsibility to provide this method with <code>symbol</code>s\nthat are valid for the <a href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\"><code>StringInterner</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#286-288\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Iter\" title=\"type string_interner::backend::Backend::Iter\">Iter</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that yields all interned strings and their symbols.</p>\n</div></details></div></details>",0,"string_interner::DefaultStringInterner"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#96-121\">source</a><a href=\"#impl-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#104-110\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new empty <code>StringInterner</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#114-120\">source</a><h4 class=\"code-header\">pub fn <a href=\"string_interner/struct.StringInterner.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>StringInterner</code> with the given initial capacity.</p>\n</div></details></div></details>",0,"string_interner::DefaultStringInterner"],["<section id=\"impl-Eq-for-StringInterner%3CB,+H%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/string_interner/interner.rs.html#88-94\">source</a><a href=\"#impl-Eq-for-StringInterner%3CB,+H%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"string_interner/struct.StringInterner.html\" title=\"struct string_interner::StringInterner\">StringInterner</a>&lt;B, H&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    &lt;B as <a class=\"trait\" href=\"string_interner/backend/trait.Backend.html\" title=\"trait string_interner::backend::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"string_interner/backend/trait.Backend.html#associatedtype.Symbol\" title=\"type string_interner::backend::Backend::Symbol\">Symbol</a>: <a class=\"trait\" href=\"string_interner/trait.Symbol.html\" title=\"trait string_interner::Symbol\">Symbol</a>,\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","string_interner::DefaultStringInterner"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()