searchState.loadedDescShard("pallet_bridge_messages", 0, "Runtime module that allows sending and receiving messages …\nHelper struct that provides methods for working with a …\nTrait representing a call that is a sub type of …\nInbound lane with given id is closed.\nOutbound lane with given id is closed.\nSize of the message being delivered in benchmarks.\nNumber of extra bytes (excluding size of storage value …\nThe unrewarded relayers vec contains an empty entry. May …\nBridged chain is trying to confirm more messages than we …\nInbound messages lane.\nInbound lane already exists.\nInbound lane storage.\nThe target that will be used when publishing logs related …\nMessage dispatcher is inactive at given inbound lane. This …\nMessage lanes manager.\nLanes manager errors.\nThe unrewarded relayers vec contains non-consecutive …\nOutbound messages lane.\nOutbound lane already exists.\nOutbound lane storage.\nResult of messages receival confirmation.\nId of relayer on source chain.\nRuntime inbound lane storage.\nRuntime outbound lane storage.\nStructure, containing a validated message payload and all …\nInbound lane data wrapper that implements <code>MaxEncodedLen</code>.\nOutbound message data wrapper that implements <code>MaxEncodedLen</code>…\nStored message payload type.\nThe chain has more messages that need to be confirmed than …\nNo inbound lane with given id.\nNo outbound lane with given id.\nExtended weight info.\nGet existing inbound lane, checking that it is in usable …\nGet existing outbound lane, checking that it is in usable …\nGet existing inbound lane without any additional state …\nGet existing outbound lane without any additional state …\nCreate a new instance of <code>MessagesCallInfo</code> from a …\nCreate a new instance of <code>MessagesCallInfo</code> from a …\nEnsures that a <code>ReceiveMessagesProof</code> or a …\nConfirm messages delivery.\nCreate new inbound lane in <code>Opened</code> state.\nCreate new outbound lane in <code>Opened</code> state.\nGet lane data from the storage.\nGet lane data from the storage.\nGet this lane data.\nEnsure that we’re able to receive maximal confirmation …\nEnsure that we’re able to receive maximal (by-size and …\nEnsure that we are able to dispatch maximal size messages.\nEnsure that weights from <code>WeightInfoExt</code> implementation are …\nSize of proof that is already included in the single …\nReturns number of bytes that may be subtracted from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nLane id.\nLane id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn maximal number of unconfirmed messages in inbound …\nReturn maximal number of unrewarded relayer entries in …\nReturns dispatch weight of message of given size.\nReturns dispatch weight of message of given size.\nA module that is responsible for migration of storage.\nCreate new inbound lane backed by given storage.\nCreate new lanes manager.\nCreate new outbound lane backed by given storage.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nPurge lane data from the storage.\nPurge lane data from the storage.\nPurge lane state from the storage.\nPurge lane state from the storage.\nReturn nonces of all currently queued messages.\nReceive new message.\nCreate a new instance of <code>ReceiveMessagesDeliveryProofInfo</code> …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nReturns weight overhead of delivery confirmation …\nReturns weight overhead of delivery confirmation …\nExtra weight that is added to the …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nWeight of confirmation delivery extrinsic.\nWeight of confirmation delivery extrinsic.\nCreate a new instance of <code>ReceiveMessagesProofInfo</code> from a …\nReturns weight that needs to be accounted when message …\nReturns weight that needs to be accounted when message …\nExtra weight that is added to the <code>receive_messages_proof</code> …\nWeight of message delivery extrinsic.\nWeight of message delivery extrinsic.\nReceive state of the corresponding outbound lane.\nRemove outbound message from the storage.\nRemove message from the storage. Doesn’t perform any …\nSave outbound message in the storage.\nSend message over lane.\nUpdate lane data in the storage.\nUpdate lane data in the storage.\nSet lane state.\nSet lane state.\nGet lane state.\nGet lane state.\nReturns storage reference.\nReturns weight that needs to be accounted when storage …\nReturns weight that needs to be accounted when storage …\nReturns true if:\nAutogenerated weights for pallet_bridge_messages\nThe in-code storage version.\nThis module contains data structures that are valid for …\nThis migration to <code>1</code> updates the metadata of <code>InboundLanes</code> …\n<code>UncheckedMigrationV0ToV1</code> wrapped in a <code>VersionedMigration</code>, …\nMigrates the pallet storage to v1.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nError generated by the <code>OwnedBridgeModule</code> trait.\nBridged chain type.\nShortcut to bridged chain type for Config.\nBridged chain headers provider.\nShortcut to bridged header chain type for Config.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nHandler for relayer payments that happen during message …\nHandler for relayer payments that happen during message …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCan be used to configure the genesis state of this pallet.\nMap of lane id =&gt; inbound lane data.\nPayload type of inbound messages. This payload is …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe cumulative dispatch weight, passed by relayer is not …\nInvalid messages delivery proof has been submitted.\nInvalid messages has been submitted.\nThe relayer has declared invalid unrewarded relayers state …\nError that is reported by the lanes manager.\nMessage has been accepted and is waiting to be delivered.\nMessage dispatch handler.\nMessage has been treated as invalid by the pallet logic.\nMessages in the inclusive range have been delivered to the …\nMessages have been received from the bridged chain.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nPallet is not in Normal operating mode.\nDelivery confirmation callback.\nMap of lane id =&gt; outbound lane data.\nAll queued outbound messages.\nPayload type of outbound messages. This payload is …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe current operating mode of the pallet.\nOptional pallet owner.\nError confirming messages receival.\nThe overarching event type.\nThis chain type.\nShortcut to this chain type for Config.\nThe transaction brings too many messages.\nBenchmarks results from runtime we’re plugged into.\nDummy marker.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn inbound lane data.\nPrepare data, related to given inbound message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>PalletOwner</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>receive_messages_proof</code>.\nCreate a call with the variant <code>set_operating_mode</code>.\nCreate a call with the variant <code>set_owner</code>.\nOpened lanes.\nAn auto-generated getter for <code>PalletOperatingMode</code>.\nInitial pallet operating mode.\nReturn outbound lane data.\nGet stored data of the outbound message with given nonce.\nInitial pallet owner.\nReceive messages delivery proof from bridged chain.\nReceive messages delivery proof from bridged chain.\nReceive messages proof from bridged chain.\nReceive messages proof from bridged chain.\nHalt or resume all/some pallet operations.\nHalt or resume all/some pallet operations.\nChange <code>PalletOwner</code>.\nChange <code>PalletOwner</code>.\nAuto-generated docs-only module listing all (public and …\nLane, which has accepted the message.\nLane for which the delivery has been confirmed.\nDelivered messages.\nNonce of accepted message.\nReceive messages delivery proof from bridged chain.\nReceive messages proof from bridged chain.\nHalt or resume all/some pallet operations.\nChange <code>PalletOwner</code>.\nMap of lane id =&gt; inbound lane data.\nMap of lane id =&gt; outbound lane data.\nAll queued outbound messages.\nThe current operating mode of the pallet.\nOptional pallet owner.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_bridge_messages</code> that are generated …\nWeight functions needed for pallet_bridge_messages.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …")