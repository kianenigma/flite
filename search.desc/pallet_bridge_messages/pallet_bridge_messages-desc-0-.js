searchState.loadedDescShard("pallet_bridge_messages", 0, "Runtime module that allows sending and receiving messages …\nSize of the message being delivered in benchmarks.\nNumber of extra bytes (excluding size of storage value …\nThe target that will be used when publishing logs related …\nStructure, containing a validated message payload and all …\nInbound lane data wrapper that implements <code>MaxEncodedLen</code>.\nOutbound message data wrapper that implements <code>MaxEncodedLen</code>…\nExtended weight info.\nEnsure that we’re able to receive maximal confirmation …\nEnsure that we’re able to receive maximal (by-size and …\nEnsure that we are able to dispatch maximal size messages.\nEnsure that weights from <code>WeightInfoExt</code> implementation are …\nSize of proof that is already included in the single …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns dispatch weight of message of given size.\nReturns dispatch weight of message of given size.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nReturns weight overhead of delivery confirmation …\nReturns weight overhead of delivery confirmation …\nExtra weight that is added to the …\nReturns weight that needs to be accounted when receiving …\nReturns weight that needs to be accounted when receiving …\nWeight of confirmation delivery extrinsic.\nWeight of confirmation delivery extrinsic.\nReturns weight that needs to be accounted when message …\nReturns weight that needs to be accounted when message …\nExtra weight that is added to the <code>receive_messages_proof</code> …\nWeight of message delivery extrinsic.\nWeight of message delivery extrinsic.\nReturns weight that needs to be accounted when storage …\nReturns weight that needs to be accounted when storage …\nAutogenerated weights for pallet_bridge_messages\nGet all active outbound lanes that the message pallet is …\nError generated by the <code>OwnedBridgeModule</code> trait.\nBridged chain type.\nShortcut to bridged chain type for Config.\nBridged chain headers provider.\nShortcut to bridged header chain type for Config.\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\nHandler for relayer payments that happen during message …\nHandler for relayer payments that happen during message …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nSubmitter has failed to pay fee for delivering and …\nCan be used to configure the genesis state of this pallet.\nThe outbound lane is inactive.\nMap of lane id =&gt; inbound lane data.\nPayload type of inbound messages. This payload is …\n<code>Instance1</code> to be used for instantiable pallets defined with …\nThe cumulative dispatch weight, passed by relayer is not …\nInvalid messages delivery proof has been submitted.\nInvalid messages has been submitted.\nThe relayer has declared invalid unrewarded relayers state …\nGet-parameter that returns number of active outbound lanes …\nMessage has been accepted and is waiting to be delivered.\nMessage dispatch handler.\nThe inbound message dispatcher is inactive.\nThe message someone is trying to work with (i.e. increase …\nMessage has been treated as invalid by the pallet logic.\nMessages in the inclusive range have been delivered to the …\nMessages have been received from the bridged chain.\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nPallet is not in Normal operating mode.\nDelivery confirmation callback.\nMap of lane id =&gt; outbound lane data.\nMap of lane id =&gt; is congested signal sent. It is managed …\nAll queued outbound messages.\nPayload type of outbound messages. This payload is …\nThe <code>Pallet</code> struct, the main type that implements traits …\nThe current operating mode of the pallet.\nOptional pallet owner.\nError confirming messages receival.\nThe overarching event type.\nThis chain type.\nShortcut to this chain type for Config.\nThe transaction brings too many messages.\nBenchmarks results from runtime we’re plugged into.\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn inbound lane data.\nPrepare data, related to given inbound message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn auto-generated getter for <code>PalletOwner</code>.\nCreate a call with the variant …\nCreate a call with the variant <code>receive_messages_proof</code>.\nCreate a call with the variant <code>set_operating_mode</code>.\nCreate a call with the variant <code>set_owner</code>.\nAn auto-generated getter for <code>PalletOperatingMode</code>.\nInitial pallet operating mode.\nReturn outbound lane data.\nGet stored data of the outbound message with given nonce.\nInitial pallet owner.\nDummy marker.\nReceive messages delivery proof from bridged chain.\nReceive messages delivery proof from bridged chain.\nReceive messages proof from bridged chain.\nReceive messages proof from bridged chain.\nHalt or resume all/some pallet operations.\nHalt or resume all/some pallet operations.\nChange <code>PalletOwner</code>.\nChange <code>PalletOwner</code>.\nAuto-generated docs-only module listing all (public and …\nLane, which has accepted the message.\nLane for which the delivery has been confirmed.\nDelivered messages.\nNonce of accepted message.\nReceive messages delivery proof from bridged chain.\nReceive messages proof from bridged chain.\nHalt or resume all/some pallet operations.\nChange <code>PalletOwner</code>.\nMap of lane id =&gt; inbound lane data.\nMap of lane id =&gt; outbound lane data.\nMap of lane id =&gt; is congested signal sent. It is managed …\nAll queued outbound messages.\nThe current operating mode of the pallet.\nOptional pallet owner.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWeights for <code>pallet_bridge_messages</code> that are generated …\nWeight functions needed for pallet_bridge_messages.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeRialtoMessages PalletOperatingMode (r:1 w:0)\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …\nStorage: BridgeUnknownMessages PalletOperatingMode (r:1 …")