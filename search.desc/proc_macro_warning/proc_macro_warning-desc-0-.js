searchState.loadedDescShard("proc_macro_warning", 0, "Rust does not have native functions to produce warnings …\nA <em>deprecation</em> warning that notifies users of outdated …\nA <em>deprecation</em> warning.\nGradually build a <em>deprecation</em> <code>Warning</code>.\nA compile-time warning that was already subject to …\nCreates a compile-time warning for proc macro use. See …\nUnwraps <code>Self::maybe_build</code> for convenience.\nBuild the warning or panic if it fails.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <em>deprecated</em> warning builder with the given …\nA help link for the user to explain the transition and …\nMultiple help links for the user to explain the transition …\nSet an optional index in case that a warning appears …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFallibly build a warning.\nThe <em>new</em> way of doing something.\nCreate a new <em>deprecated</em> warning.\nCreate a new deprecated warning that already was formatted …\nThe old <em>deprecated</em> way of doing something.\nSet the span of the warning.\nTry to build the warning.\nUnique name of this warning.\nThe exact note to be used for <code>note = &quot;&quot;</code>.\nThe span of the warning.\nThe index of the warning. Name++Index must be unique.\nThe help links to be displayed next to the message.\nThe message of the warning.\nThe name of the warning.\nThe span of the warning.")