searchState.loadedDescShard("polkadot_ckb_merkle_mountain_range", 0, "proof items is not enough to build a tree\nContains the error value\nThe leaves is an empty list, or beyond the mmr range\nThe nodes are an empty list, or beyond the mmr range\nThe two nodes couldn’t merge into one.\nContains the success value\nfrom merkle proof of leaf n to calculate merkle root of n …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate proof that prior merkle root r’ is an ancestor …\nGenerate node merkle proof for positions\nGenerate merkle proof for positions\nget_ancestor_root\nget_root\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerifies a old root and all incremental leaves.\nfrom merkle proof of leaf n to calculate merkle root of n …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerifies a old root and all incremental leaves.\nReturns the height of the peaks in the mmr, presented by a …\nReturns the pos of the peaks in the mmr. for example, for …\nReturns whether <code>descendant_contender</code> is a descendant of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")